{"version":3,"sources":["components/shared-components/ColorPicker/index.js","views/app-views/docs/components/ColorPickerDemo.js","views/app-views/docs/components/ComponentIntro.js"],"names":["ColorPicker","props","colorChange","color","useState","visible","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","className","style","backgroundColor","onClick","onChange","value","rgb","rgba","r","g","b","a","Demo","console","log","ColorPickerDemo","ComponentIntro","name","desc","title","language","atomDark"],"mappings":"0JAoDeA,EAhDK,SAAAC,GAAU,IAErBC,EAA0BD,EAA1BC,YAFoB,EAEMD,EAAbE,aAFO,MAED,GAFC,IAIEC,oBAAS,GAJX,mBAIrBC,EAJqB,KAIZC,EAJY,OAKUF,mBAASD,GALnB,mBAKrBI,EALqB,KAKRC,EALQ,OAMIJ,mBAASD,GANb,mBAMrBM,EANqB,KAMXC,EANW,KAQ5BC,qBAAU,WACTD,EAAYP,GACZK,EAAeL,KACb,CAACA,IAEJ,IAAMS,EAAmB,WACxBN,GAAYD,IAWb,OACC,sBAAKQ,UAAU,eAAf,UACC,qBAAKA,UAAU,wBAAf,SACC,qBAAKA,UAAU,QAAQC,MAAO,CAACC,gBAAiBN,GAAsB,WAAYO,QAASJ,MAG3FP,GACC,qCACC,qBAAKQ,UAAU,wBAAwBG,QAASJ,IAChD,cAAC,IAAD,CAAcT,MAAOI,EAAaU,SAjBjB,SAACC,GAAW,IAC1BC,EAAOD,EAAPC,IACDC,EAAI,cAAUD,EAAIE,EAAd,aAAoBF,EAAIG,EAAxB,aAA8BH,EAAII,EAAlC,aAAwCJ,EAAIK,EAA5C,KACVd,EAAYU,GACZZ,EAAeW,GACfjB,EAAYgB,a,qCCNRO,EAAO,WAMZ,OACC,cAAC,EAAD,CAAatB,MAAO,UAAWD,YALV,SAACgB,GACtBQ,QAAQC,IAAI,mBAAoBT,OAsDnBU,UA9CS,WACvB,OACC,gCACC,6BAAI,iBACJ,sBAAKf,UAAU,OAAf,UACC,cAACgB,EAAA,QAAD,CAAgBC,KAAK,WAAWC,KAAK,oDACrC,cAACF,EAAA,QAAD,CAAgBC,KAAK,cAAcC,KAAK,6EAEzC,sBAAKlB,UAAU,OAAf,UACC,eAAC,IAAD,CAAMmB,MAAM,UAAZ,UACC,cAAC,EAAD,IACA,qBAAKnB,UAAU,OAAf,SACC,cAAC,IAAD,CAAmBA,UAAU,UAAUoB,SAAS,MAAMnB,MAAOoB,IAA7D,SApCQ,+TAyCV,oBAAIrB,UAAU,OAAd,SAAqB,UACrB,qBAAKA,UAAU,6BAAf,SACC,kCACC,gCACC,+BACC,6BAAI,aACJ,6BAAI,gBACJ,6BAAI,cAGN,kCACC,+BACC,6BAAI,UACJ,6BAAI,kBACJ,6BAAI,cAEL,+BACC,6BAAI,gBACJ,6BAAI,kCACJ,+BAAI,SAAU,IAAI,uCAAqC,0B,iCCnE/D,uBASegB,UAPQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,OACtB,sBAAKlB,UAAU,OAAf,UACC,uBAAMA,UAAU,6BAAhB,UAA8CiB,EAAK,OACnD,uBAAMjB,UAAU,kBAAhB,UAAkC,IAAEkB","file":"static/js/31.2c377f26.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from 'react'\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport ComponentIntro from './ComponentIntro.js'\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport { Card } from 'antd'\r\n\r\nconst usageStr = `import React from 'react'\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\n\r\nexport default const Demo = () =>  (\r\n\tconst onColorChange = (value) => {\r\n\t\tconsole.log('Selected color: ', value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ColorPicker color={'#3e82f7'} colorChange={onColorChange}/>\r\n\t)\r\n)`\r\n\r\nconst Demo = () => {\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconsole.log('Selected color: ', value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ColorPicker color={'#3e82f7'} colorChange={onColorChange}/>\r\n\t)\r\n}\r\n\r\nconst ColorPickerDemo = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>AvatarStatus</h2>\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<ComponentIntro name=\"Location\" desc=\"src/components/shared-components/ColorPicker.js\"/>\r\n\t\t\t\t<ComponentIntro name=\"Description\" desc=\"ColorPicker allow you select & get the color info from color palette.\"/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<Card title=\"Example\">\r\n\t\t\t\t\t<Demo />\r\n\t\t\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"jsx\" style={atomDark}>\r\n\t\t\t\t\t\t\t{usageStr}\r\n\t\t\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<h4 className=\"mt-4\">Props</h4>\r\n\t\t\t\t<div className=\"api-container border-0 p-0\">\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Property</th>\r\n\t\t\t\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>color</td>\r\n\t\t\t\t\t\t\t\t<td>Initial color</td>\r\n\t\t\t\t\t\t\t\t<td>string</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>colorChange</td>\r\n\t\t\t\t\t\t\t\t<td>Handler click on color picker</td>\r\n\t\t\t\t\t\t\t\t<td>() =&gt; {'{'} hex, hsl, hsv, oldHue, rgb, source {'}'}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ColorPickerDemo\r\n","import React from 'react'\r\n\r\nconst ComponentIntro = ({name, desc}) => (\r\n\t<div className=\"mb-3\">\r\n\t\t<span className=\"font-weight-bold text-dark\">{name}:</span>\r\n\t\t<span className=\"text-gray-light\"> {desc}</span>\r\n\t</div>\r\n)\r\n\r\nexport default ComponentIntro"],"sourceRoot":""}